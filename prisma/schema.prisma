generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Banner {
  id          String   @id @default(uuid())
  imageString String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  For         String?
}

model TravelPackage {
  id                  String                @id @default(cuid())
  name                String
  price               BigInt
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  dailyDetails        Json                  @default("[]")
  durationInDays      Int
  overview            String
  images              String[]
  arrival             String
  departureFrom       String
  isFeatured          Boolean
  categories          String[]              @default([])
  PackageSubscription PackageSubscription[]
}

model PackageSubscription {
  id            String        @id
  firstName     String
  lastName      String
  email         String
  phoneNumber   String
  country       String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  packageId     String
  TravelPackage TravelPackage @relation(fields: [packageId], references: [id], onDelete: Cascade)
}

model TravelCustomBooking {
  id          String   @id
  name        String
  email       String?
  phoneNumber String
  country     String
  Destination String
  createdAt   DateTime @default(now())
}

// making @id to name and id combine

model Countries {
  id          String    @id @default(cuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
   
 

}




model Visa {
  id                String   @id @default(cuid())
  countryName       String
  images            String[]
  updatedAt         DateTime @updatedAt
  createdAt         DateTime @default(now())
  description       String
  pricing           Int
  requiredDocuments String
  visaValidity      Int
}

model VisaOrder {
  id             String   @id @default(cuid())
  fullName       String
  email          String
  nationality    String
  travelDate     DateTime
  numberOfVisas  Int
  processingType String
  countryName    String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  phoneNumber    String
}

model Agent {
  id    String @id @default(cuid())
  name  String
  phone String
  email String @unique
}

model UmrahPackage {
  id                       String                     @id @default(cuid())
  title                    String
  description              String
  hotelMakkah              String
  hotelMakkahRating        Int
  hotelMadinah             String
  hotelMadinahRating       Int
  nightsInMakkah           Int
  nightsInMadinah          Int
  Sharing_Price            BigInt
  Quad_Price               BigInt
  Triple_Price             BigInt
  Double_Price             BigInt
  image                    String?
  inclusions               String[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  UmrahPackageSubscription UmrahPackageSubscription[]
}

model UmrahPackageSubscription {
  id           String       @id
  firstName    String
  lastName     String
  email        String
  phoneNumber  String
  country      String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime
  packageId    String
  UmrahPackage UmrahPackage @relation(fields: [packageId], references: [id], onDelete: Cascade)
}

model CustomUmrahPackage {
  id              String   @id
  fullName        String
  email           String
  phoneNumber     String
  familyMembers   Int
  travelDate      DateTime
  durationInDays  Int
  transportNeeded Boolean
  createdAt       DateTime @default(now())
  updatedAt       DateTime
}
